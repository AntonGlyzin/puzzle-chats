# Generated by Django 4.0.5 on 2022-07-17 03:49

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import martor.models
import portfolio.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('base', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название тега')),
                ('slug', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='URL')),
                ('type_menu', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Портфолио'), (2, 'Блог')], null=True, verbose_name='Тип контента')),
                ('style', models.CharField(blank=True, max_length=50, verbose_name='style')),
            ],
            options={
                'verbose_name': 'тег',
                'verbose_name_plural': 'Теги',
            },
        ),
        migrations.CreateModel(
            name='WorkPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=200, verbose_name='Заголовок')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('type_content', models.PositiveSmallIntegerField(choices=[(1, 'Портфолио'), (2, 'Блог'), (3, 'Страница')], verbose_name='Тип контента')),
                ('photo', models.ImageField(blank=True, upload_to='', verbose_name='Фото')),
                ('link', models.TextField(blank=True, verbose_name='Внешняя ссылка')),
                ('content', martor.models.MartorField(blank=True, verbose_name='Контент')),
                ('date_created', models.DateField(default=datetime.date.today, verbose_name='Дата написания')),
                ('date_update', models.DateField(auto_now=True, verbose_name='Дата изменения')),
                ('is_published', models.BooleanField(default=True, verbose_name='Статус публикации')),
                ('comment_push', models.BooleanField(default=True, verbose_name='Комментарии(Вкл/Выкл)')),
                ('viewers', models.JSONField(default=portfolio.models.WorkPost.init_viewers, verbose_name='Просмотрели')),
                ('key_words', models.CharField(blank=True, max_length=255, verbose_name='Keywords')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_post', to=settings.AUTH_USER_MODEL)),
                ('skils', models.ManyToManyField(related_name='post_skils', to='base.myskils', verbose_name='Технологии')),
            ],
            options={
                'verbose_name': 'проект',
                'verbose_name_plural': 'Все проекты',
            },
        ),
        migrations.CreateModel(
            name='UserOnline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_name', models.CharField(max_length=255, unique=True)),
                ('last_visit', models.DateTimeField(auto_now=True)),
                ('is_state', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_online', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserFollowers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('follower', models.ManyToManyField(blank=True, related_name='user_followers', to='base.profile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_followers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'подписку',
                'verbose_name_plural': 'Подписки',
            },
        ),
        migrations.CreateModel(
            name='TimeLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, verbose_name='Контент')),
                ('date_created', models.DateTimeField(default=datetime.datetime.today, verbose_name='Дата написания')),
                ('ip_view', models.JSONField(default=portfolio.models.TimeLine.init_ip_view, verbose_name='Просмотренно с ip')),
                ('active', models.BooleanField(default=True, verbose_name='Активность')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='timeline_author', to=settings.AUTH_USER_MODEL)),
                ('blog', models.ForeignKey(blank=True, limit_choices_to={'type_content': 2}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='timeline_blog', to='portfolio.workpost', verbose_name='Блог')),
                ('project', models.ForeignKey(blank=True, limit_choices_to={'type_content': 1}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='timeline_project', to='portfolio.workpost', verbose_name='Проект')),
                ('skils', models.ManyToManyField(blank=True, related_name='timeline_skils', to='base.myskils', verbose_name='skils')),
            ],
            options={
                'verbose_name': 'timeline',
                'verbose_name_plural': 'TimeLine',
            },
            managers=[
                ('activeted', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('host', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rooms', to=settings.AUTH_USER_MODEL)),
                ('users', models.ManyToManyField(blank=True, related_name='users_rooms', to=settings.AUTH_USER_MODEL)),
                ('views', models.ManyToManyField(blank=True, related_name='views_room', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Raiting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_rait', models.PositiveSmallIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], verbose_name='Райтинг')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='raiting_project', to='portfolio.workpost', verbose_name='Проект')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='raiting_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'рейтинг',
                'verbose_name_plural': 'Рейтинг',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=4000)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='messages', to='portfolio.message')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='portfolio.room')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255, verbose_name='Комментатор')),
                ('ip', models.CharField(blank=True, max_length=30, verbose_name='IP адрес')),
                ('ip_view', models.JSONField(default=portfolio.models.Comment.init_ip_view, verbose_name='Просмотренно с ip')),
                ('sess', models.TextField(blank=True, verbose_name='Сессия')),
                ('body', models.TextField(verbose_name='Текст')),
                ('created', models.DateField(default=datetime.date.today, verbose_name='Дата создания')),
                ('active', models.BooleanField(default=False, verbose_name='Активность')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comments', to='portfolio.workpost', verbose_name='Проект')),
                ('response', models.ManyToManyField(blank=True, related_name='comments_res', to='portfolio.comment', verbose_name='Ответы')),
                ('time_line', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments_timeline', to='portfolio.timeline', verbose_name='Временная метка')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comments_user', to='base.profile', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'комментарий',
                'verbose_name_plural': 'Коментарии',
            },
        ),
        migrations.CreateModel(
            name='ViewObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='view_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('object_id', 'user', 'content_type')},
            },
        ),
        migrations.CreateModel(
            name='LikeObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('object_id', 'user', 'content_type')},
            },
        ),
    ]
